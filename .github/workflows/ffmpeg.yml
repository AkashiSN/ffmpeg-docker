name: ffmpeg

on:
  push:
    paths:
      - 'Dockerfile'
      - 'scripts/base.sh'
      - 'scripts/build-ffmpeg.sh'
      - '.github/workflows/ffmpeg.yml'
    branches: [main]
  workflow_run:
    workflows: ["ffmpeg-library-build"]
    branches: [main]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') == false && (github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'))
    strategy:
      matrix:
        ffmpeg: ["4.4.2", "5.0.1"]
        flavor: [linux, qsv-linux, windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ github.workflow }}-${{ matrix.ffmpeg }}-${{ matrix.hwaccel }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ github.workflow }}-${{ matrix.ffmpeg }}-${{ matrix.hwaccel }}-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: akashisn
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: akashisn
          password: ${{ github.token }}

      - name: Set build target (linux)
        if: matrix.flavor == 'linux'
        run: |
          echo "target=ffmpeg" >> $GITHUB_ENV
          echo "image_name=akashisn/ffmpeg" >> $GITHUB_ENV
          echo "image_tag=${{ matrix.ffmpeg }}" >> $GITHUB_ENV

      - name: Set build target (qsv-linux)
        if: matrix.flavor == 'qsv-linux'
        run: |
          echo "target=ffmpeg-qsv" >> $GITHUB_ENV
          echo "image_name=akashisn/ffmpeg" >> $GITHUB_ENV
          echo "image_tag=${{ matrix.ffmpeg }}-qsv" >> $GITHUB_ENV

      - name: Set build target (windows)
        if: matrix.flavor == 'windows'
        run: |
          echo "target=ffmpeg-windows" >> $GITHUB_ENV
          echo "image_name=ghcr.io/akashisn/ffmpeg-windows" >> $GITHUB_ENV
          echo "image_tag=${{ matrix.ffmpeg }}" >> $GITHUB_ENV

      - name: Build and push - ffmpeg
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          tags: |
            ${{ env.image_name }}:${{ env.image_tag }}
          build-args: |
            FFMPEG_VERSION=${{ matrix.ffmpeg }}
          platforms: linux/amd64
          target: ${{ env.target }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache # https://github.com/docker/build-push-action/issues/252
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
