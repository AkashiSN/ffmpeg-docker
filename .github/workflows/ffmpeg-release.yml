name: ffmpeg-release

on:
  push:
    tags:
      - v*

jobs:
  export:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ffmpeg: [4.3.2, 4.4]
        hwaccel: [none, qsv]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set build target (none)
        if: matrix.hwaccel == 'none'
        run: |
          echo "build_tag=" >> $GITHUB_ENV
          echo "build_platforms=linux/amd64,linux/arm64/v8" >> $GITHUB_ENV

      - name: Set build target (qsv)
        if: matrix.hwaccel == 'qsv'
        run: |
          echo "build_tag=-qsv" >> $GITHUB_ENV
          echo "build_platforms=linux/amd64" >> $GITHUB_ENV

      - name: Export - ffmpeg
        run: |
           docker buildx build --platform ${{ env.build_platforms }} --target export${{ env.build_tag }} --output type=local,dest=/tmp/build \
                  -t ffmpeg${{ env.build_tag }} --build-arg FFMPEG_VERSION=${{ matrix.ffmpeg }} -f ./export.Dockerfile .

      - name: Archive artifact (multi arch)
        if: env.build_platforms == 'linux/amd64,linux/arm64/v8'
        run: |
          mkdir /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64
          cp -r /tmp/build/linux_amd64/* /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64/
          tar acvf /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64.tar.xz -C /tmp ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64

          mkdir /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-arm64
          cp -r /tmp/build/linux_arm64/* /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-arm64/
          tar acvf /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-arm64.tar.xz -C /tmp ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-arm64

      - name: Archive artifact (amd64)
        if: env.build_platforms == 'linux/amd64'
        run: |
          mkdir /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64
          cp -r /tmp/build/* /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64/
          tar acvf /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64.tar.xz -C /tmp ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64

      - name: Upload artifact (multi arch)
        if: env.build_platforms == 'linux/amd64,linux/arm64/v8'
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}
          path: |
            /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64.tar.xz
            /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-arm64.tar.xz

      - name: Upload artifact (amd64)
        if: env.build_platforms == 'linux/amd64'
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}
          path: /tmp/ffmpeg-${{ matrix.ffmpeg }}${{ env.build_tag }}-linux-amd64.tar.xz

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [export]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          path: /tmp/artifact

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: /tmp/artifact/**/*.tar.xz